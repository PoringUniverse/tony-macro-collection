#______________________________________________________________________________________________________
# 
# Made by Anthony : https://github.com/iamtonysoft/ragnarok-macros									   
# Accepting Donations : https://www.paypal.me/iamtonysoft											   
# Grinding Macros v1.3																				   	   
#______________________________________________________________________________________________________
#																									   		
# Simple Guide: copy and paste this inside your control/eventMacros.txt								   
#																									   	
# Collection Of Macros																				   																				   
# 1.) Change Grinding Spot (triggers the automacro every 1 hour to check your current level)		   
# 2.) Change Save Points (useful for grinding no need for storage config)						 	   
# 3.) Avoid Traps 												   	
#______________________________________________________________________________________________________


#_______________________________________________________________#
# 										  						
#	1. CHANGE GRINDING SPOT      	  							
#   															
#   NOTE : Do not forget to set your lockMap lvl are based 		
#		   between this e.g (base lvl 10 >= betwen <= 25)		
#_______________________________________________________________#

automacro GrindingTime {
	BaseLevel >= 10
	JobIDNot 0
	exclusive 1
	run-once 1
	timeout 1800
	call ChangeGrindMaps
}

macro ChangeGrindMaps {
	$LVL25 = none; $LVL35 = none; $LVL45 = none; $LVL55 = none; 
	$LVL65 = none; $LVL75 = none; $LVL85 = none; $LVL99 = none; 
	
	switch ($.BaseLevelLast) {
		case (<= 25) {
			if (&config(lockMap) == $LVL25) stop
			do conf lockMap $LVL25
			release GrindingTime
		}
		case (<= 35) {
			if (&config(lockMap) == $LVL35) stop
			do conf lockMap $LVL35
			release GrindingTime
		}
		case (<= 45) {
			if (&config(lockMap) == $LVL45) stop
			do conf lockMap $LVL45
			release GrindingTime
		}
		case (<= 55) {
			if (&config(lockMap) == $LVL55) stop
			do conf lockMap $LVL55
			release GrindingTime
		}
		case (<= 65) {
			if (&config(lockMap) == $LVL65) stop
			do conf lockMap $LVL65
			release GrindingTime
		}
		case (<= 75) {
			if (&config(lockMap) == $LVL75) stop
			do conf lockMap $LVL75
			release GrindingTime
		}
		case (<= 85) {
			if (&config(lockMap) == $LVL85) stop
			do conf lockMap $LVL85
			release GrindingTime
		}
		case (<= 99) {
			if (&config(lockMap) == $LVL99) stop
			do conf lockMap $LVL99
			release GrindingTime
		}
		else {
			log [You have reached the max level] Congratulations!
			stop
		}
	}
}


#_______________________________________________________________#
# 										  						
#	2. CHANGE GRINDING SPOT      	  							
#   															
#   NOTE : Set 0 or 1 to disable/enable autostorage 			
#		   in $storageOption									
#_______________________________________________________________#

automacro ChangeSavePoints {
	InMap prt_fild05, prontera, geffen, aldebaran, payon, morocc, alberta
	exclusive 1
	run-once 1
	timeout 10
	call KafraSavePoints
}

macro KafraSavePoints {
	$storageOption = 1 
	
	switch ($.InMapLast) {
		case (== prt_fild05) {
			if (&config (saveMap) == prt_fild05) stop
			do move &rand(284,288) &rand(219,222)
			do talknpc 290 224 c r0 n
			[	
				do conf saveMap prt_fild05
				do conf storageAuto $storageOption
				do conf storageAuto_npc prt_fild05 290 224
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(260,280)
				do conf autoMoveOnDeath_y &rand(200,220)
			]
			release ChangeSavePoints
		}
		case (== prontera) {
			if (&config (saveMap) == prontera) stop
			do move &rand(145,149) &rand(23,27)
			do talknpc 151 29 c r0 n
			[
				do conf saveMap prontera
				do conf storageAuto $storageOption
				do conf storageAuto_npc prontera 151 29
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(120,140)
				do conf autoMoveOnDeath_y &rand(10,25)
			]
			release ChangeSavePoints
		}
		case (== geffen) {
			if (&config (saveMap) == geffen) stop
			do move &rand(114,118) &rand(56,60)
			do talknpc 120 62 c r0 n
			[
				do conf saveMap geffen
				do conf storageAuto $storageOption
				do conf storageAuto_npc geffen 120 62
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(90,110)
				do conf autoMoveOnDeath_y &rand(30,50)
			]
			release ChangeSavePoints
		}
		case (== aldebaran) {
			if (&config (saveMap) == aldebaran) stop
			do move &rand(137,141) &rand(113,117)
			do talknpc 143 119 c r0 n
			[
				do conf saveMap aldebaran
				do conf storageAuto $storageOption
				do conf storageAuto_npc aldebaran 143 119
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(110,130)
				do conf autoMoveOnDeath_y &rand(90,110)
			]
			release ChangeSavePoints
		}
		case (== payon) {
			if (&config (saveMap) == payon) stop
			do move &rand(175,179) &rand(98,102)
			do talknpc 181 104 c r0 n
			[	
				do conf saveMap payon
				do conf storageAuto $storageOption
				do conf storageAuto_npc payon 181 104
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(150,170)
				do conf autoMoveOnDeath_y &rand(70,90)
			]
			release ChangeSavePoints
		}
		case (== morocc) {
			if (&config (saveMap) == morocc) stop
			do move &rand(150,154) &rand(91,95)
			do talknpc 156 97 c r0 n
			[	
				do conf saveMap morocc
				do conf storageAuto $storageOption
				do conf storageAuto_npc morocc 156 97
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(120,140)
				do conf autoMoveOnDeath_y &rand(60,80)
			]
			release ChangeSavePoints
		}
		case (== alberta) {
			if (&config (saveMap) == alberta) stop
			do move &rand(107,111) &rand(54,58)
			do talknpc 113 60 c r0 n
			[	
				do conf saveMap alberta
				do conf storageAuto $storageOption
				do conf storageAuto_npc alberta 113 60
				do conf storageAuto_npc_steps c r1 n
				do conf autoMoveOnDeath 1
				do conf autoMoveOnDeath_x &rand(80,100)
				do conf autoMoveOnDeath_y &rand(30,50)
			]
			release ChangeSavePoints
		}
	}
}


#_________________________________________#
# 										  
#	3. AVOID TRAPS   		         	  
#_________________________________________#

automacro TrapMaps {
	InMap yuno, prt_in 240 139
	exclusive 1
	run-once 1
	call {
		do respawn
		release TrapMaps 
	}
}